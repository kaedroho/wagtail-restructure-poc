From 2eaaa2eaab2c272544ad480eca124688462b08aa Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 15:56:24 +0100
Subject: [PATCH 1/6] Add Query/QueryDailyHits models into search promotions

---
 .../search_promotions/management/__init__.py  |  0
 .../management/commands/__init__.py           |  0
 .../searchpromotions_garbage_collect.py       | 16 ++++
 .../migrations/0003_query_querydailyhits.py   | 35 +++++++++
 wagtail/contrib/search_promotions/models.py   | 77 ++++++++++++++++++-
 5 files changed, 126 insertions(+), 2 deletions(-)
 create mode 100644 wagtail/contrib/search_promotions/management/__init__.py
 create mode 100644 wagtail/contrib/search_promotions/management/commands/__init__.py
 create mode 100644 wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py
 create mode 100644 wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py

diff --git a/wagtail/contrib/search_promotions/management/__init__.py b/wagtail/contrib/search_promotions/management/__init__.py
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/wagtail/contrib/search_promotions/management/commands/__init__.py b/wagtail/contrib/search_promotions/management/commands/__init__.py
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py b/wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py
new file mode 100644
index 00000000000..7ecb120dce1
--- /dev/null
+++ b/wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py
@@ -0,0 +1,16 @@
+from django.core.management.base import BaseCommand
+
+from wagtail.contrib.search_promotions import models
+
+
+class Command(BaseCommand):
+    def handle(self, **options):
+        # Clean daily hits
+        self.stdout.write("Cleaning daily hits records…")
+        models.QueryDailyHits.garbage_collect()
+        self.stdout.write("Done")
+
+        # Clean queries
+        self.stdout.write("Cleaning query records…")
+        models.Query.garbage_collect()
+        self.stdout.write("Done")
diff --git a/wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py b/wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py
new file mode 100644
index 00000000000..ae29ac1d630
--- /dev/null
+++ b/wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py
@@ -0,0 +1,35 @@
+# Generated by Django 3.1.8 on 2021-06-22 14:19
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('wagtailsearchpromotions', '0002_capitalizeverbose'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Query',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('query_string', models.CharField(max_length=255, unique=True)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='QueryDailyHits',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('date', models.DateField()),
+                ('hits', models.IntegerField(default=0)),
+                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_hits', to='wagtailsearchpromotions.query')),
+            ],
+            options={
+                'verbose_name': 'Query Daily Hits',
+                'verbose_name_plural': 'Query Daily Hits',
+                'unique_together': {('query', 'date')},
+            },
+        ),
+    ]
diff --git a/wagtail/contrib/search_promotions/models.py b/wagtail/contrib/search_promotions/models.py
index 6602010945b..49bd5d4be26 100644
--- a/wagtail/contrib/search_promotions/models.py
+++ b/wagtail/contrib/search_promotions/models.py
@@ -1,11 +1,84 @@
+import datetime
+
+from django.conf import settings
 from django.db import models
+from django.utils import timezone
 from django.utils.translation import gettext_lazy as _
 
-from wagtail.search.models import Query
+from wagtail.search.models import Query as WagtailSearchQuery
+from wagtail.search.utils import MAX_QUERY_STRING_LENGTH, normalise_query_string
+
+
+class Query(models.Model):
+    query_string = models.CharField(max_length=MAX_QUERY_STRING_LENGTH, unique=True)
+
+    def save(self, *args, **kwargs):
+        # Normalise query string
+        self.query_string = normalise_query_string(self.query_string)
+
+        super().save(*args, **kwargs)
+
+    def add_hit(self, date=None):
+        if date is None:
+            date = timezone.now().date()
+        daily_hits, created = QueryDailyHits.objects.get_or_create(query=self, date=date)
+        daily_hits.hits = models.F('hits') + 1
+        daily_hits.save()
+
+    def __str__(self):
+        return self.query_string
+
+    @property
+    def hits(self):
+        hits = self.daily_hits.aggregate(models.Sum('hits'))['hits__sum']
+        return hits if hits else 0
+
+    @classmethod
+    def garbage_collect(cls):
+        """
+        Deletes all Query records that have no daily hits or editors picks
+        """
+        extra_filter_kwargs = {'editors_picks__isnull': True, } if hasattr(cls, 'editors_picks') \
+            else {}
+        cls.objects.filter(daily_hits__isnull=True, **extra_filter_kwargs).delete()
+
+    @classmethod
+    def get(cls, query_string):
+        return cls.objects.get_or_create(query_string=normalise_query_string(query_string))[0]
+
+    @classmethod
+    def get_most_popular(cls, date_since=None):
+        # TODO: Implement date_since
+        return (cls.objects.filter(daily_hits__isnull=False)
+                .annotate(_hits=models.Sum('daily_hits__hits'))
+                .distinct().order_by('-_hits'))
+
+
+class QueryDailyHits(models.Model):
+    query = models.ForeignKey(Query, db_index=True, related_name='daily_hits', on_delete=models.CASCADE)
+    date = models.DateField()
+    hits = models.IntegerField(default=0)
+
+    @classmethod
+    def garbage_collect(cls, days=None):
+        """
+        Deletes all QueryDailyHits records that are older than a set number of days
+        """
+        days = getattr(settings, 'WAGTAILSEARCH_HITS_MAX_AGE', 7) if days is None else days
+        min_date = timezone.now().date() - datetime.timedelta(days)
+
+        cls.objects.filter(date__lt=min_date).delete()
+
+    class Meta:
+        unique_together = (
+            ('query', 'date'),
+        )
+        verbose_name = _('Query Daily Hits')
+        verbose_name_plural = _('Query Daily Hits')
 
 
 class SearchPromotion(models.Model):
-    query = models.ForeignKey(Query, db_index=True, related_name='editors_picks', on_delete=models.CASCADE)
+    query = models.ForeignKey(WagtailSearchQuery, db_index=True, related_name='editors_picks', on_delete=models.CASCADE)
     page = models.ForeignKey('wagtailcore.Page', verbose_name=_('page'), on_delete=models.CASCADE)
     sort_order = models.IntegerField(null=True, blank=True, editable=False)
     description = models.TextField(verbose_name=_('description'), blank=True)

From 002db7c13c39dca618bfd88ed89d284e9f60cba2 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 16:35:33 +0100
Subject: [PATCH 2/6] Add migration to copy queries from search to
 searchpromotions

---
 .../migrations/0004_copy_queries.py               | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 wagtail/contrib/search_promotions/migrations/0004_copy_queries.py

diff --git a/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py b/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py
new file mode 100644
index 00000000000..78ebaecc1ea
--- /dev/null
+++ b/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py
@@ -0,0 +1,15 @@
+# Generated by Django 3.1.8 on 2021-06-22 14:56
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('wagtailsearchpromotions', '0003_query_querydailyhits'),
+    ]
+
+    operations = [
+        migrations.RunSQL('INSERT INTO wagtailsearchpromotions_query SELECT * FROM wagtailsearch_query', ''),
+        migrations.RunSQL('INSERT INTO wagtailsearchpromotions_querydailyhits SELECT * FROM wagtailsearch_querydailyhits', ''),
+    ]

From 5c884431f3740f2e978466d1b87bf2b4aa263d11 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 16:38:07 +0100
Subject: [PATCH 3/6] Switch to new Query model

---
 wagtail/contrib/search_promotions/forms.py    |  3 +-
 .../migrations/0005_switch_query_model.py     | 19 +++++++
 wagtail/contrib/search_promotions/models.py   |  3 +-
 .../wagtailsearchpromotions_tags.py           |  3 +-
 wagtail/contrib/search_promotions/tests.py    | 51 ++++++++++++++++++-
 wagtail/contrib/search_promotions/views.py    |  2 +-
 wagtail/search/tests/test_queries.py          | 13 -----
 7 files changed, 72 insertions(+), 22 deletions(-)
 create mode 100644 wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py

diff --git a/wagtail/contrib/search_promotions/forms.py b/wagtail/contrib/search_promotions/forms.py
index 82e42b72a35..7a1d7a4c5dc 100644
--- a/wagtail/contrib/search_promotions/forms.py
+++ b/wagtail/contrib/search_promotions/forms.py
@@ -3,8 +3,7 @@
 from django.utils.translation import gettext_lazy as _
 
 from wagtail.admin.widgets import AdminPageChooser
-from wagtail.contrib.search_promotions.models import SearchPromotion
-from wagtail.search.models import Query
+from wagtail.contrib.search_promotions.models import Query, SearchPromotion
 
 
 class SearchPromotionForm(forms.ModelForm):
diff --git a/wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py b/wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py
new file mode 100644
index 00000000000..2ce2d0e25bc
--- /dev/null
+++ b/wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py
@@ -0,0 +1,19 @@
+# Generated by Django 3.1.8 on 2021-06-22 15:36
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('wagtailsearchpromotions', '0004_copy_queries'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='searchpromotion',
+            name='query',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editors_picks', to='wagtailsearchpromotions.query'),
+        ),
+    ]
diff --git a/wagtail/contrib/search_promotions/models.py b/wagtail/contrib/search_promotions/models.py
index 49bd5d4be26..9af53144deb 100644
--- a/wagtail/contrib/search_promotions/models.py
+++ b/wagtail/contrib/search_promotions/models.py
@@ -5,7 +5,6 @@
 from django.utils import timezone
 from django.utils.translation import gettext_lazy as _
 
-from wagtail.search.models import Query as WagtailSearchQuery
 from wagtail.search.utils import MAX_QUERY_STRING_LENGTH, normalise_query_string
 
 
@@ -78,7 +77,7 @@ class Meta:
 
 
 class SearchPromotion(models.Model):
-    query = models.ForeignKey(WagtailSearchQuery, db_index=True, related_name='editors_picks', on_delete=models.CASCADE)
+    query = models.ForeignKey(Query, db_index=True, related_name='editors_picks', on_delete=models.CASCADE)
     page = models.ForeignKey('wagtailcore.Page', verbose_name=_('page'), on_delete=models.CASCADE)
     sort_order = models.IntegerField(null=True, blank=True, editable=False)
     description = models.TextField(verbose_name=_('description'), blank=True)
diff --git a/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py b/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py
index 7653659fcb2..efea1c160c0 100644
--- a/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py
+++ b/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py
@@ -1,7 +1,6 @@
 from django import template
 
-from wagtail.contrib.search_promotions.models import SearchPromotion
-from wagtail.search.models import Query
+from wagtail.contrib.search_promotions.models import Query, SearchPromotion
 
 
 register = template.Library()
diff --git a/wagtail/contrib/search_promotions/tests.py b/wagtail/contrib/search_promotions/tests.py
index 69ec78fa262..32913f75c2e 100644
--- a/wagtail/contrib/search_promotions/tests.py
+++ b/wagtail/contrib/search_promotions/tests.py
@@ -1,11 +1,14 @@
+from datetime import datetime, timedelta
+from io import StringIO
+
+from django.core import management
 from django.test import TestCase
 from django.urls import reverse
 
 from wagtail.admin.admin_url_finder import AdminURLFinder
-from wagtail.contrib.search_promotions.models import SearchPromotion
+from wagtail.contrib.search_promotions.models import Query, QueryDailyHits, SearchPromotion
 from wagtail.contrib.search_promotions.templatetags.wagtailsearchpromotions_tags import (
     get_search_promotions)
-from wagtail.search.models import Query
 from wagtail.tests.utils import WagtailTestUtils
 
 
@@ -429,3 +432,47 @@ def test_post(self):
 
         # The other recommendation should still exist
         self.assertFalse(SearchPromotion.objects.filter(id=self.search_pick.id).exists())
+
+
+class TestGarbageCollectManagementCommand(TestCase):
+    def test_garbage_collect_command(self):
+        nowdt = datetime.now()
+        old_hit_date = (nowdt - timedelta(days=14)).date()
+        recent_hit_date = (nowdt - timedelta(days=1)).date()
+
+        # Add 10 hits that are more than one week old ; the related queries and the daily hits
+        # should be deleted bu the search_garbage_collect command.
+        query_ids_to_be_deleted = []
+        for i in range(10):
+            q = Query.get("Hello {}".format(i))
+            q.add_hit(date=old_hit_date)
+            query_ids_to_be_deleted.append(q.id)
+
+        # Add 10 hits that are less than one week old ; these ones should not be deleted.
+        recent_query_ids = []
+        for i in range(10):
+            q = Query.get("World {}".format(i))
+            q.add_hit(date=recent_hit_date)
+            recent_query_ids.append(q.id)
+
+        # Add 10 queries that are promoted. These ones should not be deleted.
+        promoted_query_ids = []
+        for i in range(10):
+            q = Query.get("Foo bar {}".format(i))
+            q.add_hit(date=old_hit_date)
+            SearchPromotion.objects.create(query=q, page_id=1, sort_order=0, description='Test')
+            promoted_query_ids.append(q.id)
+
+        management.call_command('searchpromotions_garbage_collect', stdout=StringIO())
+
+        self.assertFalse(Query.objects.filter(id__in=query_ids_to_be_deleted).exists())
+        self.assertFalse(QueryDailyHits.objects.filter(
+            date=old_hit_date, query_id__in=query_ids_to_be_deleted).exists())
+
+        self.assertEqual(Query.objects.filter(id__in=recent_query_ids).count(), 10)
+        self.assertEqual(QueryDailyHits.objects.filter(
+            date=recent_hit_date, query_id__in=recent_query_ids).count(), 10)
+
+        self.assertEqual(Query.objects.filter(id__in=promoted_query_ids).count(), 10)
+        self.assertEqual(QueryDailyHits.objects.filter(
+            date=recent_hit_date, query_id__in=promoted_query_ids).count(), 0)
diff --git a/wagtail/contrib/search_promotions/views.py b/wagtail/contrib/search_promotions/views.py
index d0e3fe5982a..844f522e98e 100644
--- a/wagtail/contrib/search_promotions/views.py
+++ b/wagtail/contrib/search_promotions/views.py
@@ -11,9 +11,9 @@
 from wagtail.admin.auth import any_permission_required, permission_required
 from wagtail.admin.forms.search import SearchForm
 from wagtail.contrib.search_promotions import forms
+from wagtail.contrib.search_promotions.models import Query
 from wagtail.core.log_actions import log
 from wagtail.search import forms as search_forms
-from wagtail.search.models import Query
 
 
 @any_permission_required(
diff --git a/wagtail/search/tests/test_queries.py b/wagtail/search/tests/test_queries.py
index 38eba80aa8b..7cebce06db0 100644
--- a/wagtail/search/tests/test_queries.py
+++ b/wagtail/search/tests/test_queries.py
@@ -6,7 +6,6 @@
 from django.core import management
 from django.test import SimpleTestCase, TestCase
 
-from wagtail.contrib.search_promotions.models import SearchPromotion
 from wagtail.search import models
 from wagtail.search.query import And, Or, Phrase, PlainText
 from wagtail.search.utils import (
@@ -134,14 +133,6 @@ def test_garbage_collect_command(self):
             q.add_hit(date=recent_hit_date)
             recent_querie_ids.append(q.id)
 
-        # Add 10 queries that are promoted. These ones should not be deleted.
-        promoted_querie_ids = []
-        for i in range(10):
-            q = models.Query.get("Foo bar {}".format(i))
-            q.add_hit(date=old_hit_date)
-            SearchPromotion.objects.create(query=q, page_id=1, sort_order=0, description='Test')
-            promoted_querie_ids.append(q.id)
-
         management.call_command('search_garbage_collect', stdout=StringIO())
 
         self.assertFalse(models.Query.objects.filter(id__in=querie_ids_to_be_deleted).exists())
@@ -152,10 +143,6 @@ def test_garbage_collect_command(self):
         self.assertEqual(models.QueryDailyHits.objects.filter(
             date=recent_hit_date, query_id__in=recent_querie_ids).count(), 10)
 
-        self.assertEqual(models.Query.objects.filter(id__in=promoted_querie_ids).count(), 10)
-        self.assertEqual(models.QueryDailyHits.objects.filter(
-            date=recent_hit_date, query_id__in=promoted_querie_ids).count(), 0)
-
 
 class TestQueryChooserView(TestCase, WagtailTestUtils):
     def setUp(self):

From 607f3541f69238b23aed20a8528ccf17fc431233 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 16:39:48 +0100
Subject: [PATCH 4/6] Move QueryForm into searchpromotions

---
 wagtail/contrib/search_promotions/forms.py |  8 ++++++++
 wagtail/contrib/search_promotions/views.py |  9 ++++-----
 wagtail/search/forms.py                    | 16 ++++++++--------
 3 files changed, 20 insertions(+), 13 deletions(-)

diff --git a/wagtail/contrib/search_promotions/forms.py b/wagtail/contrib/search_promotions/forms.py
index 7a1d7a4c5dc..cfb3b8035f8 100644
--- a/wagtail/contrib/search_promotions/forms.py
+++ b/wagtail/contrib/search_promotions/forms.py
@@ -6,6 +6,14 @@
 from wagtail.contrib.search_promotions.models import Query, SearchPromotion
 
 
+class QueryForm(forms.Form):
+    query_string = forms.CharField(label=_("Search term(s)/phrase"),
+                                   help_text=_("Enter the full search string to match. An "
+                                               "exact match is required for your Promoted Results to be "
+                                               "displayed, wildcards are NOT allowed."),
+                                   required=True)
+
+
 class SearchPromotionForm(forms.ModelForm):
     sort_order = forms.IntegerField(required=False)
 
diff --git a/wagtail/contrib/search_promotions/views.py b/wagtail/contrib/search_promotions/views.py
index 844f522e98e..4ca0fae686c 100644
--- a/wagtail/contrib/search_promotions/views.py
+++ b/wagtail/contrib/search_promotions/views.py
@@ -13,7 +13,6 @@
 from wagtail.contrib.search_promotions import forms
 from wagtail.contrib.search_promotions.models import Query
 from wagtail.core.log_actions import log
-from wagtail.search import forms as search_forms
 
 
 @any_permission_required(
@@ -114,7 +113,7 @@ def save_searchpicks(query, new_query, searchpicks_formset):
 def add(request):
     if request.method == 'POST':
         # Get query
-        query_form = search_forms.QueryForm(request.POST)
+        query_form = forms.QueryForm(request.POST)
         if query_form.is_valid():
             query = Query.get(query_form['query_string'].value())
 
@@ -137,7 +136,7 @@ def add(request):
         else:
             searchpicks_formset = forms.SearchPromotionsFormSet()
     else:
-        query_form = search_forms.QueryForm()
+        query_form = forms.QueryForm()
         searchpicks_formset = forms.SearchPromotionsFormSet()
 
     return TemplateResponse(request, 'wagtailsearchpromotions/add.html', {
@@ -153,7 +152,7 @@ def edit(request, query_id):
 
     if request.method == 'POST':
         # Get query
-        query_form = search_forms.QueryForm(request.POST)
+        query_form = forms.QueryForm(request.POST)
         # and the recommendations
         searchpicks_formset = forms.SearchPromotionsFormSet(request.POST, instance=query)
 
@@ -175,7 +174,7 @@ def edit(request, query_id):
                     # specific errors will be displayed within form fields
 
     else:
-        query_form = search_forms.QueryForm(initial=dict(query_string=query.query_string))
+        query_form = forms.QueryForm(initial=dict(query_string=query.query_string))
         searchpicks_formset = forms.SearchPromotionsFormSet(instance=query)
 
     return TemplateResponse(request, 'wagtailsearchpromotions/edit.html', {
diff --git a/wagtail/search/forms.py b/wagtail/search/forms.py
index 88b9581d45e..2b6e89953b0 100644
--- a/wagtail/search/forms.py
+++ b/wagtail/search/forms.py
@@ -1,10 +1,10 @@
-from django import forms
-from django.utils.translation import gettext_lazy as _
+import sys
 
+from wagtail.utils.deprecation import MovedDefinitionHandler, RemovedInWagtail217Warning
 
-class QueryForm(forms.Form):
-    query_string = forms.CharField(label=_("Search term(s)/phrase"),
-                                   help_text=_("Enter the full search string to match. An "
-                                               "exact match is required for your Promoted Results to be "
-                                               "displayed, wildcards are NOT allowed."),
-                                   required=True)
+
+MOVED_DEFINITIONS = {
+    'QueryForm': ('wagtail.contrib.search_promotions.forms', 'QueryForm'),
+}
+
+sys.modules[__name__] = MovedDefinitionHandler(sys.modules[__name__], MOVED_DEFINITIONS, RemovedInWagtail217Warning)

From 0b1ac6ffc53fa599ffecd0f087a71b4f51b28c24 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 24 Aug 2021 11:28:01 +0100
Subject: [PATCH 5/6] Add deprecation warning for wagtailsearch.Query.add_hit

---
 wagtail/search/models.py | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/wagtail/search/models.py b/wagtail/search/models.py
index 76d78ebb46c..1990f7ddd3a 100644
--- a/wagtail/search/models.py
+++ b/wagtail/search/models.py
@@ -1,4 +1,5 @@
 import datetime
+import warnings
 
 from django.apps import apps
 from django.conf import settings
@@ -12,6 +13,7 @@
 from django.utils.translation import gettext_lazy as _
 
 from wagtail.search.utils import MAX_QUERY_STRING_LENGTH, normalise_query_string
+from wagtail.utils.deprecation import RemovedInWagtail217Warning
 
 from .index import class_is_indexed
 from .utils import get_descendants_content_types_pks
@@ -27,6 +29,12 @@ def save(self, *args, **kwargs):
         super().save(*args, **kwargs)
 
     def add_hit(self, date=None):
+        warnings.warn(
+            "The wagtailsearch.Query model has been moved to wagtail.contrib.search_promotions. "
+            "Please update your code to use the Query model from that app instead.",
+            RemovedInWagtail217Warning,
+            stacklevel=2
+        )
         if date is None:
             date = timezone.now().date()
         daily_hits, created = QueryDailyHits.objects.get_or_create(

From ae7a010b1f169d4d677e01d17ba9105a1097c7b7 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 24 Aug 2021 12:09:15 +0100
Subject: [PATCH 6/6] Add management command for copying old
 Query/QueryDailyHits records

---
 .../copy_daily_hits_from_wagtailsearch.py     | 42 +++++++++++++++++++
 wagtail/contrib/search_promotions/tests.py    | 31 +++++++++++++-
 2 files changed, 72 insertions(+), 1 deletion(-)
 create mode 100644 wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py

diff --git a/wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py b/wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py
new file mode 100644
index 00000000000..a4405fde722
--- /dev/null
+++ b/wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py
@@ -0,0 +1,42 @@
+from django.core.management.base import BaseCommand
+
+from wagtail.contrib.search_promotions import models
+from wagtail.search import models as search_models
+
+
+class Command(BaseCommand):
+    def handle(self, **options):
+        # Queries
+        self.stdout.write("Copying query records from wagtailsearch")
+
+        models.Query.objects.bulk_create(
+            [
+                models.Query(query_string=query.query_string)
+                for query in search_models.Query.objects.all()
+            ],
+            ignore_conflicts=True
+        )
+
+        # Query daily hits
+        self.stdout.write("Copying query daily hits records from wagtailsearch")
+
+        daily_hits_list = search_models.QueryDailyHits.objects.all().select_related('query')
+
+        # Prefetch referenced Query objects from the new model
+        new_queries = models.Query.objects.in_bulk(
+            [daily_hits.query.query_string for daily_hits in daily_hits_list],
+            field_name='query_string'
+        )
+
+        # Bulk insert new daily hits records
+        models.QueryDailyHits.objects.bulk_create(
+            [
+                models.QueryDailyHits(
+                    query=new_queries[daily_hits.query.query_string],
+                    date=daily_hits.date,
+                    hits=daily_hits.hits
+                )
+                for daily_hits in daily_hits_list
+            ],
+            ignore_conflicts=True
+        )
diff --git a/wagtail/contrib/search_promotions/tests.py b/wagtail/contrib/search_promotions/tests.py
index 32913f75c2e..e40da6961f5 100644
--- a/wagtail/contrib/search_promotions/tests.py
+++ b/wagtail/contrib/search_promotions/tests.py
@@ -1,4 +1,4 @@
-from datetime import datetime, timedelta
+from datetime import date, datetime, timedelta
 from io import StringIO
 
 from django.core import management
@@ -476,3 +476,32 @@ def test_garbage_collect_command(self):
         self.assertEqual(Query.objects.filter(id__in=promoted_query_ids).count(), 10)
         self.assertEqual(QueryDailyHits.objects.filter(
             date=recent_hit_date, query_id__in=promoted_query_ids).count(), 0)
+
+
+class TestCopyDailyHitsFromWagtailSearchManagementCommand(TestCase):
+    def run_command(self, **options):
+        output = StringIO()
+        management.call_command('copy_daily_hits_from_wagtailsearch', stdout=output, **options)
+        output.seek(0)
+        return output
+
+    def test_copy(self):
+        # Create some daily hits in the wagtailsearch.{Query,QueryDailyHits} models
+        from wagtail.search.models import Query as WSQuery
+        query = WSQuery.get("test query")
+        query.add_hit(date(2021, 8, 24))
+        query.add_hit(date(2021, 8, 24))
+        query.add_hit(date(2021, 7, 1))
+
+        # Check that nothing magically got inserted into the new query model
+        self.assertFalse(Query.objects.exists())
+
+        # Run the management command
+        self.run_command()
+
+        # Check that the query now exists in the new model
+        new_query = Query.objects.get()
+        self.assertEqual(new_query.query_string, "test query")
+
+        # Check daily hits
+        self.assertEqual(new_query.hits, 3)
