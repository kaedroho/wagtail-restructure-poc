From 5fb2a440bc6caec9ad88b37c112303e791cf7ce9 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 15:56:24 +0100
Subject: [PATCH 1/6] Add Query/QueryDailyHits models into search promotions

---
 .../search_promotions/management/__init__.py  |  0
 .../management/commands/__init__.py           |  0
 .../searchpromotions_garbage_collect.py       | 16 ++++
 .../migrations/0003_query_querydailyhits.py   | 58 ++++++++++++
 wagtail/contrib/search_promotions/models.py   | 94 ++++++++++++++++++-
 5 files changed, 166 insertions(+), 2 deletions(-)
 create mode 100644 wagtail/contrib/search_promotions/management/__init__.py
 create mode 100644 wagtail/contrib/search_promotions/management/commands/__init__.py
 create mode 100644 wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py
 create mode 100644 wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py

diff --git a/wagtail/contrib/search_promotions/management/__init__.py b/wagtail/contrib/search_promotions/management/__init__.py
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/wagtail/contrib/search_promotions/management/commands/__init__.py b/wagtail/contrib/search_promotions/management/commands/__init__.py
new file mode 100644
index 00000000000..e69de29bb2d
diff --git a/wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py b/wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py
new file mode 100644
index 00000000000..7ecb120dce1
--- /dev/null
+++ b/wagtail/contrib/search_promotions/management/commands/searchpromotions_garbage_collect.py
@@ -0,0 +1,16 @@
+from django.core.management.base import BaseCommand
+
+from wagtail.contrib.search_promotions import models
+
+
+class Command(BaseCommand):
+    def handle(self, **options):
+        # Clean daily hits
+        self.stdout.write("Cleaning daily hits records…")
+        models.QueryDailyHits.garbage_collect()
+        self.stdout.write("Done")
+
+        # Clean queries
+        self.stdout.write("Cleaning query records…")
+        models.Query.garbage_collect()
+        self.stdout.write("Done")
diff --git a/wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py b/wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py
new file mode 100644
index 00000000000..5caf2e0952b
--- /dev/null
+++ b/wagtail/contrib/search_promotions/migrations/0003_query_querydailyhits.py
@@ -0,0 +1,58 @@
+# Generated by Django 3.1.8 on 2021-06-22 14:19
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ("wagtailsearchpromotions", "0002_capitalizeverbose"),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name="Query",
+            fields=[
+                (
+                    "id",
+                    models.AutoField(
+                        auto_created=True,
+                        primary_key=True,
+                        serialize=False,
+                        verbose_name="ID",
+                    ),
+                ),
+                ("query_string", models.CharField(max_length=255, unique=True)),
+            ],
+        ),
+        migrations.CreateModel(
+            name="QueryDailyHits",
+            fields=[
+                (
+                    "id",
+                    models.AutoField(
+                        auto_created=True,
+                        primary_key=True,
+                        serialize=False,
+                        verbose_name="ID",
+                    ),
+                ),
+                ("date", models.DateField()),
+                ("hits", models.IntegerField(default=0)),
+                (
+                    "query",
+                    models.ForeignKey(
+                        on_delete=django.db.models.deletion.CASCADE,
+                        related_name="daily_hits",
+                        to="wagtailsearchpromotions.query",
+                    ),
+                ),
+            ],
+            options={
+                "verbose_name": "Query Daily Hits",
+                "verbose_name_plural": "Query Daily Hits",
+                "unique_together": {("query", "date")},
+            },
+        ),
+    ]
diff --git a/wagtail/contrib/search_promotions/models.py b/wagtail/contrib/search_promotions/models.py
index 0a542d3f7fe..3c01e292737 100644
--- a/wagtail/contrib/search_promotions/models.py
+++ b/wagtail/contrib/search_promotions/models.py
@@ -1,12 +1,102 @@
+import datetime
+
+from django.conf import settings
 from django.db import models
+from django.utils import timezone
 from django.utils.translation import gettext_lazy as _
 
-from wagtail.search.models import Query
+from wagtail.search.models import Query as WagtailSearchQuery
+from wagtail.search.utils import MAX_QUERY_STRING_LENGTH, normalise_query_string
+
+
+class Query(models.Model):
+    query_string = models.CharField(max_length=MAX_QUERY_STRING_LENGTH, unique=True)
+
+    def save(self, *args, **kwargs):
+        # Normalise query string
+        self.query_string = normalise_query_string(self.query_string)
+
+        super().save(*args, **kwargs)
+
+    def add_hit(self, date=None):
+        if date is None:
+            date = timezone.now().date()
+        daily_hits, created = QueryDailyHits.objects.get_or_create(
+            query=self, date=date
+        )
+        daily_hits.hits = models.F("hits") + 1
+        daily_hits.save()
+
+    def __str__(self):
+        return self.query_string
+
+    @property
+    def hits(self):
+        hits = self.daily_hits.aggregate(models.Sum("hits"))["hits__sum"]
+        return hits if hits else 0
+
+    @classmethod
+    def garbage_collect(cls):
+        """
+        Deletes all Query records that have no daily hits or editors picks
+        """
+        extra_filter_kwargs = (
+            {
+                "editors_picks__isnull": True,
+            }
+            if hasattr(cls, "editors_picks")
+            else {}
+        )
+        cls.objects.filter(daily_hits__isnull=True, **extra_filter_kwargs).delete()
+
+    @classmethod
+    def get(cls, query_string):
+        return cls.objects.get_or_create(
+            query_string=normalise_query_string(query_string)
+        )[0]
+
+    @classmethod
+    def get_most_popular(cls, date_since=None):
+        # TODO: Implement date_since
+        return (
+            cls.objects.filter(daily_hits__isnull=False)
+            .annotate(_hits=models.Sum("daily_hits__hits"))
+            .distinct()
+            .order_by("-_hits")
+        )
+
+
+class QueryDailyHits(models.Model):
+    query = models.ForeignKey(
+        Query, db_index=True, related_name="daily_hits", on_delete=models.CASCADE
+    )
+    date = models.DateField()
+    hits = models.IntegerField(default=0)
+
+    @classmethod
+    def garbage_collect(cls, days=None):
+        """
+        Deletes all QueryDailyHits records that are older than a set number of days
+        """
+        days = (
+            getattr(settings, "WAGTAILSEARCH_HITS_MAX_AGE", 7) if days is None else days
+        )
+        min_date = timezone.now().date() - datetime.timedelta(days)
+
+        cls.objects.filter(date__lt=min_date).delete()
+
+    class Meta:
+        unique_together = (("query", "date"),)
+        verbose_name = _("Query Daily Hits")
+        verbose_name_plural = _("Query Daily Hits")
 
 
 class SearchPromotion(models.Model):
     query = models.ForeignKey(
-        Query, db_index=True, related_name="editors_picks", on_delete=models.CASCADE
+        WagtailSearchQuery,
+        db_index=True,
+        related_name="editors_picks",
+        on_delete=models.CASCADE,
     )
     page = models.ForeignKey(
         "wagtailcore.Page", verbose_name=_("page"), on_delete=models.CASCADE

From bfb78d4145421f9be4a8c4b2adf2062d7828d60e Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 16:35:33 +0100
Subject: [PATCH 2/6] Add migration to copy queries from search to
 searchpromotions

---
 .../migrations/0004_copy_queries.py               | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 wagtail/contrib/search_promotions/migrations/0004_copy_queries.py

diff --git a/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py b/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py
new file mode 100644
index 00000000000..78ebaecc1ea
--- /dev/null
+++ b/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py
@@ -0,0 +1,15 @@
+# Generated by Django 3.1.8 on 2021-06-22 14:56
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('wagtailsearchpromotions', '0003_query_querydailyhits'),
+    ]
+
+    operations = [
+        migrations.RunSQL('INSERT INTO wagtailsearchpromotions_query SELECT * FROM wagtailsearch_query', ''),
+        migrations.RunSQL('INSERT INTO wagtailsearchpromotions_querydailyhits SELECT * FROM wagtailsearch_querydailyhits', ''),
+    ]

From e42f42064f13e1cc20e4e8e5b4a48e95b9aab7af Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 16:38:07 +0100
Subject: [PATCH 3/6] Switch to new Query model

---
 wagtail/contrib/search_promotions/forms.py    |  3 +-
 .../migrations/0004_copy_queries.py           | 12 +++-
 .../migrations/0005_switch_query_model.py     | 23 +++++++
 wagtail/contrib/search_promotions/models.py   |  6 +-
 .../wagtailsearchpromotions_tags.py           |  3 +-
 wagtail/contrib/search_promotions/tests.py    | 68 ++++++++++++++++++-
 wagtail/contrib/search_promotions/views.py    |  2 +-
 wagtail/search/tests/test_queries.py          | 21 ------
 8 files changed, 102 insertions(+), 36 deletions(-)
 create mode 100644 wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py

diff --git a/wagtail/contrib/search_promotions/forms.py b/wagtail/contrib/search_promotions/forms.py
index fb24eec6b66..014d33d65f0 100644
--- a/wagtail/contrib/search_promotions/forms.py
+++ b/wagtail/contrib/search_promotions/forms.py
@@ -3,8 +3,7 @@
 from django.utils.translation import gettext_lazy as _
 
 from wagtail.admin.widgets import AdminPageChooser
-from wagtail.contrib.search_promotions.models import SearchPromotion
-from wagtail.search.models import Query
+from wagtail.contrib.search_promotions.models import Query, SearchPromotion
 
 
 class SearchPromotionForm(forms.ModelForm):
diff --git a/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py b/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py
index 78ebaecc1ea..02f779929d6 100644
--- a/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py
+++ b/wagtail/contrib/search_promotions/migrations/0004_copy_queries.py
@@ -6,10 +6,16 @@
 class Migration(migrations.Migration):
 
     dependencies = [
-        ('wagtailsearchpromotions', '0003_query_querydailyhits'),
+        ("wagtailsearchpromotions", "0003_query_querydailyhits"),
     ]
 
     operations = [
-        migrations.RunSQL('INSERT INTO wagtailsearchpromotions_query SELECT * FROM wagtailsearch_query', ''),
-        migrations.RunSQL('INSERT INTO wagtailsearchpromotions_querydailyhits SELECT * FROM wagtailsearch_querydailyhits', ''),
+        migrations.RunSQL(
+            "INSERT INTO wagtailsearchpromotions_query SELECT * FROM wagtailsearch_query",
+            "",
+        ),
+        migrations.RunSQL(
+            "INSERT INTO wagtailsearchpromotions_querydailyhits SELECT * FROM wagtailsearch_querydailyhits",
+            "",
+        ),
     ]
diff --git a/wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py b/wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py
new file mode 100644
index 00000000000..67a013fcf8e
--- /dev/null
+++ b/wagtail/contrib/search_promotions/migrations/0005_switch_query_model.py
@@ -0,0 +1,23 @@
+# Generated by Django 3.1.8 on 2021-06-22 15:36
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ("wagtailsearchpromotions", "0004_copy_queries"),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name="searchpromotion",
+            name="query",
+            field=models.ForeignKey(
+                on_delete=django.db.models.deletion.CASCADE,
+                related_name="editors_picks",
+                to="wagtailsearchpromotions.query",
+            ),
+        ),
+    ]
diff --git a/wagtail/contrib/search_promotions/models.py b/wagtail/contrib/search_promotions/models.py
index 3c01e292737..5161a27c90a 100644
--- a/wagtail/contrib/search_promotions/models.py
+++ b/wagtail/contrib/search_promotions/models.py
@@ -5,7 +5,6 @@
 from django.utils import timezone
 from django.utils.translation import gettext_lazy as _
 
-from wagtail.search.models import Query as WagtailSearchQuery
 from wagtail.search.utils import MAX_QUERY_STRING_LENGTH, normalise_query_string
 
 
@@ -93,10 +92,7 @@ class Meta:
 
 class SearchPromotion(models.Model):
     query = models.ForeignKey(
-        WagtailSearchQuery,
-        db_index=True,
-        related_name="editors_picks",
-        on_delete=models.CASCADE,
+        Query, db_index=True, related_name="editors_picks", on_delete=models.CASCADE
     )
     page = models.ForeignKey(
         "wagtailcore.Page", verbose_name=_("page"), on_delete=models.CASCADE
diff --git a/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py b/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py
index 3890801a616..7f16a0bd210 100644
--- a/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py
+++ b/wagtail/contrib/search_promotions/templatetags/wagtailsearchpromotions_tags.py
@@ -1,7 +1,6 @@
 from django import template
 
-from wagtail.contrib.search_promotions.models import SearchPromotion
-from wagtail.search.models import Query
+from wagtail.contrib.search_promotions.models import Query, SearchPromotion
 
 register = template.Library()
 
diff --git a/wagtail/contrib/search_promotions/tests.py b/wagtail/contrib/search_promotions/tests.py
index 31f53969672..9fb72789672 100644
--- a/wagtail/contrib/search_promotions/tests.py
+++ b/wagtail/contrib/search_promotions/tests.py
@@ -1,12 +1,19 @@
+from datetime import datetime, timedelta
+from io import StringIO
+
+from django.core import management
 from django.test import TestCase
 from django.urls import reverse
 
 from wagtail.admin.admin_url_finder import AdminURLFinder
-from wagtail.contrib.search_promotions.models import SearchPromotion
+from wagtail.contrib.search_promotions.models import (
+    Query,
+    QueryDailyHits,
+    SearchPromotion,
+)
 from wagtail.contrib.search_promotions.templatetags.wagtailsearchpromotions_tags import (
     get_search_promotions,
 )
-from wagtail.search.models import Query
 from wagtail.tests.utils import WagtailTestUtils
 
 
@@ -485,3 +492,60 @@ def test_post(self):
         self.assertFalse(
             SearchPromotion.objects.filter(id=self.search_pick.id).exists()
         )
+
+
+class TestGarbageCollectManagementCommand(TestCase):
+    def test_garbage_collect_command(self):
+        nowdt = datetime.now()
+        old_hit_date = (nowdt - timedelta(days=14)).date()
+        recent_hit_date = (nowdt - timedelta(days=1)).date()
+
+        # Add 10 hits that are more than one week old ; the related queries and the daily hits
+        # should be deleted bu the search_garbage_collect command.
+        query_ids_to_be_deleted = []
+        for i in range(10):
+            q = Query.get("Hello {}".format(i))
+            q.add_hit(date=old_hit_date)
+            query_ids_to_be_deleted.append(q.id)
+
+        # Add 10 hits that are less than one week old ; these ones should not be deleted.
+        recent_query_ids = []
+        for i in range(10):
+            q = Query.get("World {}".format(i))
+            q.add_hit(date=recent_hit_date)
+            recent_query_ids.append(q.id)
+
+        # Add 10 queries that are promoted. These ones should not be deleted.
+        promoted_query_ids = []
+        for i in range(10):
+            q = Query.get("Foo bar {}".format(i))
+            q.add_hit(date=old_hit_date)
+            SearchPromotion.objects.create(
+                query=q, page_id=1, sort_order=0, description="Test"
+            )
+            promoted_query_ids.append(q.id)
+
+        management.call_command("searchpromotions_garbage_collect", stdout=StringIO())
+
+        self.assertFalse(Query.objects.filter(id__in=query_ids_to_be_deleted).exists())
+        self.assertFalse(
+            QueryDailyHits.objects.filter(
+                date=old_hit_date, query_id__in=query_ids_to_be_deleted
+            ).exists()
+        )
+
+        self.assertEqual(Query.objects.filter(id__in=recent_query_ids).count(), 10)
+        self.assertEqual(
+            QueryDailyHits.objects.filter(
+                date=recent_hit_date, query_id__in=recent_query_ids
+            ).count(),
+            10,
+        )
+
+        self.assertEqual(Query.objects.filter(id__in=promoted_query_ids).count(), 10)
+        self.assertEqual(
+            QueryDailyHits.objects.filter(
+                date=recent_hit_date, query_id__in=promoted_query_ids
+            ).count(),
+            0,
+        )
diff --git a/wagtail/contrib/search_promotions/views.py b/wagtail/contrib/search_promotions/views.py
index 6dae42d7dbf..6f80931e369 100644
--- a/wagtail/contrib/search_promotions/views.py
+++ b/wagtail/contrib/search_promotions/views.py
@@ -11,9 +11,9 @@
 from wagtail.admin.auth import any_permission_required, permission_required
 from wagtail.admin.forms.search import SearchForm
 from wagtail.contrib.search_promotions import forms
+from wagtail.contrib.search_promotions.models import Query
 from wagtail.core.log_actions import log
 from wagtail.search import forms as search_forms
-from wagtail.search.models import Query
 
 
 @any_permission_required(
diff --git a/wagtail/search/tests/test_queries.py b/wagtail/search/tests/test_queries.py
index 5c9136a532c..62776181411 100644
--- a/wagtail/search/tests/test_queries.py
+++ b/wagtail/search/tests/test_queries.py
@@ -5,7 +5,6 @@
 from django.core import management
 from django.test import SimpleTestCase, TestCase
 
-from wagtail.contrib.search_promotions.models import SearchPromotion
 from wagtail.search import models
 from wagtail.search.query import And, Or, Phrase, PlainText
 from wagtail.search.utils import (
@@ -136,16 +135,6 @@ def test_garbage_collect_command(self):
             q.add_hit(date=recent_hit_date)
             recent_querie_ids.append(q.id)
 
-        # Add 10 queries that are promoted. These ones should not be deleted.
-        promoted_querie_ids = []
-        for i in range(10):
-            q = models.Query.get("Foo bar {}".format(i))
-            q.add_hit(date=old_hit_date)
-            SearchPromotion.objects.create(
-                query=q, page_id=1, sort_order=0, description="Test"
-            )
-            promoted_querie_ids.append(q.id)
-
         management.call_command("search_garbage_collect", stdout=StringIO())
 
         self.assertFalse(
@@ -167,16 +156,6 @@ def test_garbage_collect_command(self):
             10,
         )
 
-        self.assertEqual(
-            models.Query.objects.filter(id__in=promoted_querie_ids).count(), 10
-        )
-        self.assertEqual(
-            models.QueryDailyHits.objects.filter(
-                date=recent_hit_date, query_id__in=promoted_querie_ids
-            ).count(),
-            0,
-        )
-
 
 class TestQueryChooserView(TestCase, WagtailTestUtils):
     def setUp(self):

From 21d928046444e1870f50c59824337963a926cd67 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 22 Jun 2021 16:39:48 +0100
Subject: [PATCH 4/6] Move QueryForm into searchpromotions

---
 wagtail/contrib/search_promotions/forms.py | 12 ++++++++++++
 wagtail/contrib/search_promotions/views.py | 11 ++++-------
 wagtail/search/forms.py                    | 21 +++++++++------------
 3 files changed, 25 insertions(+), 19 deletions(-)

diff --git a/wagtail/contrib/search_promotions/forms.py b/wagtail/contrib/search_promotions/forms.py
index 014d33d65f0..e126a9841f6 100644
--- a/wagtail/contrib/search_promotions/forms.py
+++ b/wagtail/contrib/search_promotions/forms.py
@@ -6,6 +6,18 @@
 from wagtail.contrib.search_promotions.models import Query, SearchPromotion
 
 
+class QueryForm(forms.Form):
+    query_string = forms.CharField(
+        label=_("Search term(s)/phrase"),
+        help_text=_(
+            "Enter the full search string to match. An "
+            "exact match is required for your Promoted Results to be "
+            "displayed, wildcards are NOT allowed."
+        ),
+        required=True,
+    )
+
+
 class SearchPromotionForm(forms.ModelForm):
     sort_order = forms.IntegerField(required=False)
 
diff --git a/wagtail/contrib/search_promotions/views.py b/wagtail/contrib/search_promotions/views.py
index 6f80931e369..0d3615d6dac 100644
--- a/wagtail/contrib/search_promotions/views.py
+++ b/wagtail/contrib/search_promotions/views.py
@@ -13,7 +13,6 @@
 from wagtail.contrib.search_promotions import forms
 from wagtail.contrib.search_promotions.models import Query
 from wagtail.core.log_actions import log
-from wagtail.search import forms as search_forms
 
 
 @any_permission_required(
@@ -124,7 +123,7 @@ def save_searchpicks(query, new_query, searchpicks_formset):
 def add(request):
     if request.method == "POST":
         # Get query
-        query_form = search_forms.QueryForm(request.POST)
+        query_form = forms.QueryForm(request.POST)
         if query_form.is_valid():
             query = Query.get(query_form["query_string"].value())
 
@@ -164,7 +163,7 @@ def add(request):
         else:
             searchpicks_formset = forms.SearchPromotionsFormSet()
     else:
-        query_form = search_forms.QueryForm()
+        query_form = forms.QueryForm()
         searchpicks_formset = forms.SearchPromotionsFormSet()
 
     return TemplateResponse(
@@ -184,7 +183,7 @@ def edit(request, query_id):
 
     if request.method == "POST":
         # Get query
-        query_form = search_forms.QueryForm(request.POST)
+        query_form = forms.QueryForm(request.POST)
         # and the recommendations
         searchpicks_formset = forms.SearchPromotionsFormSet(
             request.POST, instance=query
@@ -222,9 +221,7 @@ def edit(request, query_id):
                     # specific errors will be displayed within form fields
 
     else:
-        query_form = search_forms.QueryForm(
-            initial={"query_string": query.query_string}
-        )
+        query_form = forms.QueryForm(initial={"query_string": query.query_string})
         searchpicks_formset = forms.SearchPromotionsFormSet(instance=query)
 
     return TemplateResponse(
diff --git a/wagtail/search/forms.py b/wagtail/search/forms.py
index 95a72462cd6..d25088f525c 100644
--- a/wagtail/search/forms.py
+++ b/wagtail/search/forms.py
@@ -1,14 +1,11 @@
-from django import forms
-from django.utils.translation import gettext_lazy as _
+import sys
 
+from wagtail.utils.deprecation import MovedDefinitionHandler, RemovedInWagtail219Warning
 
-class QueryForm(forms.Form):
-    query_string = forms.CharField(
-        label=_("Search term(s)/phrase"),
-        help_text=_(
-            "Enter the full search string to match. An "
-            "exact match is required for your Promoted Results to be "
-            "displayed, wildcards are NOT allowed."
-        ),
-        required=True,
-    )
+MOVED_DEFINITIONS = {
+    "QueryForm": ("wagtail.contrib.search_promotions.forms", "QueryForm"),
+}
+
+sys.modules[__name__] = MovedDefinitionHandler(
+    sys.modules[__name__], MOVED_DEFINITIONS, RemovedInWagtail219Warning
+)

From 856cb908e7638c1a8abe15d0b27b1ad2c3d57cf0 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 24 Aug 2021 11:28:01 +0100
Subject: [PATCH 5/6] Add deprecation warning for wagtailsearch.Query.add_hit

---
 wagtail/search/models.py | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/wagtail/search/models.py b/wagtail/search/models.py
index 663f3e1de1c..d93a44769b6 100644
--- a/wagtail/search/models.py
+++ b/wagtail/search/models.py
@@ -1,4 +1,5 @@
 import datetime
+import warnings
 
 from django import VERSION as DJANGO_VERSION
 from django.apps import apps
@@ -14,6 +15,7 @@
 from django.utils.translation import gettext_lazy as _
 
 from wagtail.search.utils import MAX_QUERY_STRING_LENGTH, normalise_query_string
+from wagtail.utils.deprecation import RemovedInWagtail219Warning
 
 from .index import class_is_indexed
 from .utils import get_descendants_content_types_pks
@@ -29,6 +31,12 @@ def save(self, *args, **kwargs):
         super().save(*args, **kwargs)
 
     def add_hit(self, date=None):
+        warnings.warn(
+            "The wagtailsearch.Query model has been moved to wagtail.contrib.search_promotions. "
+            "Please update your code to use the Query model from that app instead.",
+            RemovedInWagtail219Warning,
+            stacklevel=2
+        )
         if date is None:
             date = timezone.now().date()
         daily_hits, created = QueryDailyHits.objects.get_or_create(

From 4cec2ad2273c0e892d3600e5aa683b744ef71b87 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Tue, 24 Aug 2021 12:09:15 +0100
Subject: [PATCH 6/6] Add management command for copying old
 Query/QueryDailyHits records

---
 .../copy_daily_hits_from_wagtailsearch.py     | 44 +++++++++++++++++++
 wagtail/contrib/search_promotions/tests.py    | 34 +++++++++++++-
 2 files changed, 77 insertions(+), 1 deletion(-)
 create mode 100644 wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py

diff --git a/wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py b/wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py
new file mode 100644
index 00000000000..3ccaffae7c2
--- /dev/null
+++ b/wagtail/contrib/search_promotions/management/commands/copy_daily_hits_from_wagtailsearch.py
@@ -0,0 +1,44 @@
+from django.core.management.base import BaseCommand
+
+from wagtail.contrib.search_promotions import models
+from wagtail.search import models as search_models
+
+
+class Command(BaseCommand):
+    def handle(self, **options):
+        # Queries
+        self.stdout.write("Copying query records from wagtailsearch")
+
+        models.Query.objects.bulk_create(
+            [
+                models.Query(query_string=query.query_string)
+                for query in search_models.Query.objects.all()
+            ],
+            ignore_conflicts=True,
+        )
+
+        # Query daily hits
+        self.stdout.write("Copying query daily hits records from wagtailsearch")
+
+        daily_hits_list = search_models.QueryDailyHits.objects.all().select_related(
+            "query"
+        )
+
+        # Prefetch referenced Query objects from the new model
+        new_queries = models.Query.objects.in_bulk(
+            [daily_hits.query.query_string for daily_hits in daily_hits_list],
+            field_name="query_string",
+        )
+
+        # Bulk insert new daily hits records
+        models.QueryDailyHits.objects.bulk_create(
+            [
+                models.QueryDailyHits(
+                    query=new_queries[daily_hits.query.query_string],
+                    date=daily_hits.date,
+                    hits=daily_hits.hits,
+                )
+                for daily_hits in daily_hits_list
+            ],
+            ignore_conflicts=True,
+        )
diff --git a/wagtail/contrib/search_promotions/tests.py b/wagtail/contrib/search_promotions/tests.py
index 9fb72789672..4f9d490625c 100644
--- a/wagtail/contrib/search_promotions/tests.py
+++ b/wagtail/contrib/search_promotions/tests.py
@@ -1,4 +1,4 @@
-from datetime import datetime, timedelta
+from datetime import date, datetime, timedelta
 from io import StringIO
 
 from django.core import management
@@ -549,3 +549,35 @@ def test_garbage_collect_command(self):
             ).count(),
             0,
         )
+
+
+class TestCopyDailyHitsFromWagtailSearchManagementCommand(TestCase):
+    def run_command(self, **options):
+        output = StringIO()
+        management.call_command(
+            "copy_daily_hits_from_wagtailsearch", stdout=output, **options
+        )
+        output.seek(0)
+        return output
+
+    def test_copy(self):
+        # Create some daily hits in the wagtailsearch.{Query,QueryDailyHits} models
+        from wagtail.search.models import Query as WSQuery
+
+        query = WSQuery.get("test query")
+        query.add_hit(date(2021, 8, 24))
+        query.add_hit(date(2021, 8, 24))
+        query.add_hit(date(2021, 7, 1))
+
+        # Check that nothing magically got inserted into the new query model
+        self.assertFalse(Query.objects.exists())
+
+        # Run the management command
+        self.run_command()
+
+        # Check that the query now exists in the new model
+        new_query = Query.objects.get()
+        self.assertEqual(new_query.query_string, "test query")
+
+        # Check daily hits
+        self.assertEqual(new_query.hits, 3)
