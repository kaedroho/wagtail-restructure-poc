From 2938031ffc4fc3c976da1da84928071254d24516 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Fri, 1 Oct 2021 15:31:09 +0100
Subject: [PATCH 1/4] Create a UserProfile model in wagtailcore

---
 wagtail/core/migrations/0067_userprofile.py   | 101 ++++++++++++++++++
 wagtail/core/models/__init__.py               |   1 +
 wagtail/core/models/user_profile.py           |  88 +++++++++++++++
 .../0011_userprofile_related_name_change.py   |  25 +++++
 wagtail/users/models.py                       |   2 +-
 5 files changed, 216 insertions(+), 1 deletion(-)
 create mode 100644 wagtail/core/migrations/0067_userprofile.py
 create mode 100644 wagtail/core/models/user_profile.py
 create mode 100644 wagtail/users/migrations/0011_userprofile_related_name_change.py

diff --git a/wagtail/core/migrations/0067_userprofile.py b/wagtail/core/migrations/0067_userprofile.py
new file mode 100644
index 00000000000..06a8e01228c
--- /dev/null
+++ b/wagtail/core/migrations/0067_userprofile.py
@@ -0,0 +1,101 @@
+# Generated by Django 3.1.8 on 2021-10-01 12:44
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+import wagtail.core.models.user_profile
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+        ("wagtailcore", "0066_collection_management_permissions"),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name="UserProfile",
+            fields=[
+                (
+                    "id",
+                    models.AutoField(
+                        auto_created=True,
+                        primary_key=True,
+                        serialize=False,
+                        verbose_name="ID",
+                    ),
+                ),
+                (
+                    "submitted_notifications",
+                    models.BooleanField(
+                        default=True,
+                        help_text="Receive notification when a page is submitted for moderation",
+                        verbose_name="submitted notifications",
+                    ),
+                ),
+                (
+                    "approved_notifications",
+                    models.BooleanField(
+                        default=True,
+                        help_text="Receive notification when your page edit is approved",
+                        verbose_name="approved notifications",
+                    ),
+                ),
+                (
+                    "rejected_notifications",
+                    models.BooleanField(
+                        default=True,
+                        help_text="Receive notification when your page edit is rejected",
+                        verbose_name="rejected notifications",
+                    ),
+                ),
+                (
+                    "updated_comments_notifications",
+                    models.BooleanField(
+                        default=True,
+                        help_text="Receive notification when comments have been created, resolved, or deleted on a page that you have subscribed to receive comment notifications on",
+                        verbose_name="updated comments notifications",
+                    ),
+                ),
+                (
+                    "preferred_language",
+                    models.CharField(
+                        default="",
+                        help_text="Select language for the admin",
+                        max_length=10,
+                        verbose_name="preferred language",
+                    ),
+                ),
+                (
+                    "current_time_zone",
+                    models.CharField(
+                        default="",
+                        help_text="Select your current time zone",
+                        max_length=40,
+                        verbose_name="current time zone",
+                    ),
+                ),
+                (
+                    "avatar",
+                    models.ImageField(
+                        blank=True,
+                        upload_to=wagtail.core.models.user_profile.upload_avatar_to,
+                        verbose_name="profile picture",
+                    ),
+                ),
+                (
+                    "user",
+                    models.OneToOneField(
+                        on_delete=django.db.models.deletion.CASCADE,
+                        related_name="wagtail_userprofile",
+                        to=settings.AUTH_USER_MODEL,
+                    ),
+                ),
+            ],
+            options={
+                "verbose_name": "user profile",
+                "verbose_name_plural": "user profiles",
+            },
+        ),
+    ]
diff --git a/wagtail/core/models/__init__.py b/wagtail/core/models/__init__.py
index f11eca671e3..cea668522a0 100644
--- a/wagtail/core/models/__init__.py
+++ b/wagtail/core/models/__init__.py
@@ -106,6 +106,7 @@
     get_translatable_models,
 )
 from .sites import Site, SiteManager, SiteRootPath  # noqa
+from .user_profile import UserProfile  # noqa
 from .view_restrictions import BaseViewRestriction
 
 logger = logging.getLogger("wagtail.core")
diff --git a/wagtail/core/models/user_profile.py b/wagtail/core/models/user_profile.py
new file mode 100644
index 00000000000..173a85d3a22
--- /dev/null
+++ b/wagtail/core/models/user_profile.py
@@ -0,0 +1,88 @@
+import os
+import uuid
+
+from django.conf import settings
+from django.db import models
+from django.utils.translation import get_language
+from django.utils.translation import gettext_lazy as _
+
+
+def upload_avatar_to(instance, filename):
+    filename, ext = os.path.splitext(filename)
+    return os.path.join(
+        "avatar_images",
+        "avatar_{uuid}_{filename}{ext}".format(
+            uuid=uuid.uuid4(), filename=filename, ext=ext
+        ),
+    )
+
+
+class UserProfile(models.Model):
+    user = models.OneToOneField(
+        settings.AUTH_USER_MODEL,
+        on_delete=models.CASCADE,
+        related_name="wagtail_userprofile",
+    )
+
+    submitted_notifications = models.BooleanField(
+        verbose_name=_("submitted notifications"),
+        default=True,
+        help_text=_("Receive notification when a page is submitted for moderation"),
+    )
+
+    approved_notifications = models.BooleanField(
+        verbose_name=_("approved notifications"),
+        default=True,
+        help_text=_("Receive notification when your page edit is approved"),
+    )
+
+    rejected_notifications = models.BooleanField(
+        verbose_name=_("rejected notifications"),
+        default=True,
+        help_text=_("Receive notification when your page edit is rejected"),
+    )
+
+    updated_comments_notifications = models.BooleanField(
+        verbose_name=_("updated comments notifications"),
+        default=True,
+        help_text=_(
+            "Receive notification when comments have been created, resolved, or deleted on a page that you have subscribed to receive comment notifications on"
+        ),
+    )
+
+    preferred_language = models.CharField(
+        verbose_name=_("preferred language"),
+        max_length=10,
+        help_text=_("Select language for the admin"),
+        default="",
+    )
+
+    current_time_zone = models.CharField(
+        verbose_name=_("current time zone"),
+        max_length=40,
+        help_text=_("Select your current time zone"),
+        default="",
+    )
+
+    avatar = models.ImageField(
+        verbose_name=_("profile picture"),
+        upload_to=upload_avatar_to,
+        blank=True,
+    )
+
+    @classmethod
+    def get_for_user(cls, user):
+        return cls.objects.get_or_create(user=user)[0]
+
+    def get_preferred_language(self):
+        return self.preferred_language or get_language()
+
+    def get_current_time_zone(self):
+        return self.current_time_zone or settings.TIME_ZONE
+
+    def __str__(self):
+        return self.user.get_username()
+
+    class Meta:
+        verbose_name = _("user profile")
+        verbose_name_plural = _("user profiles")
diff --git a/wagtail/users/migrations/0011_userprofile_related_name_change.py b/wagtail/users/migrations/0011_userprofile_related_name_change.py
new file mode 100644
index 00000000000..b4027c9bd14
--- /dev/null
+++ b/wagtail/users/migrations/0011_userprofile_related_name_change.py
@@ -0,0 +1,25 @@
+# Generated by Django 3.1.8 on 2021-10-01 12:44
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+        ("wagtailusers", "0010_userprofile_updated_comments_notifications"),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name="userprofile",
+            name="user",
+            field=models.OneToOneField(
+                on_delete=django.db.models.deletion.CASCADE,
+                related_name="wagtail_userprofile_legacy",
+                to=settings.AUTH_USER_MODEL,
+            ),
+        ),
+    ]
diff --git a/wagtail/users/models.py b/wagtail/users/models.py
index 173a85d3a22..bf1fa8394dc 100644
--- a/wagtail/users/models.py
+++ b/wagtail/users/models.py
@@ -21,7 +21,7 @@ class UserProfile(models.Model):
     user = models.OneToOneField(
         settings.AUTH_USER_MODEL,
         on_delete=models.CASCADE,
-        related_name="wagtail_userprofile",
+        related_name="wagtail_userprofile_legacy",
     )
 
     submitted_notifications = models.BooleanField(

From d78e277f301bc217ba9aa028addd26651679c15b Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Fri, 1 Oct 2021 15:31:30 +0100
Subject: [PATCH 2/4] Add a migration to migrate from wagtailusers

---
 .../core/migrations/0068_copy_userprofiles.py | 38 +++++++++++++++++++
 .../0011_userprofile_related_name_change.py   |  7 ++++
 2 files changed, 45 insertions(+)
 create mode 100644 wagtail/core/migrations/0068_copy_userprofiles.py

diff --git a/wagtail/core/migrations/0068_copy_userprofiles.py b/wagtail/core/migrations/0068_copy_userprofiles.py
new file mode 100644
index 00000000000..ce9d56f4dc4
--- /dev/null
+++ b/wagtail/core/migrations/0068_copy_userprofiles.py
@@ -0,0 +1,38 @@
+# Generated by Django 3.1.8 on 2021-10-01 12:47
+
+from django.db import migrations
+
+
+def copy_userprofiles(apps, schema_editor):
+    if not apps.is_installed("wagtailusers"):
+        return
+
+    UserProfile = apps.get_model("wagtailcore.UserProfile")
+    OldUserProfile = apps.get_model("wagtailusers.UserProfile")
+    UserProfile.objects.bulk_create(
+        [
+            UserProfile(
+                user_id=user_profile.user_id,
+                submitted_notifications=user_profile.submitted_notifications,
+                approved_notifications=user_profile.approved_notifications,
+                rejected_notifications=user_profile.rejected_notifications,
+                updated_comments_notifications=user_profile.updated_comments_notifications,
+                preferred_language=user_profile.preferred_language,
+                current_time_zone=user_profile.current_time_zone,
+                avatar=user_profile.avatar,  # TODO does this copy the avatar?
+            )
+            for user_profile in OldUserProfile.objects.all()
+        ],
+        ignore_conflicts=True,
+    )
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ("wagtailcore", "0067_userprofile"),
+    ]
+
+    operations = [
+        migrations.RunPython(copy_userprofiles, migrations.RunPython.noop),
+    ]
diff --git a/wagtail/users/migrations/0011_userprofile_related_name_change.py b/wagtail/users/migrations/0011_userprofile_related_name_change.py
index b4027c9bd14..e4208adf598 100644
--- a/wagtail/users/migrations/0011_userprofile_related_name_change.py
+++ b/wagtail/users/migrations/0011_userprofile_related_name_change.py
@@ -12,6 +12,13 @@ class Migration(migrations.Migration):
         ("wagtailusers", "0010_userprofile_updated_comments_notifications"),
     ]
 
+    # This migration is a dependency of '0067_copy_userprofiles',
+    # but we don't want to add this as a hard-dependency in that
+    # migration in case wagtailusers is not installed.
+    run_before = [
+        ("wagtailcore", "0068_copy_userprofiles"),
+    ]
+
     operations = [
         migrations.AlterField(
             model_name="userprofile",

From 7db9f5595ed05c0227e0065da23b6f64f326727d Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Fri, 1 Oct 2021 15:36:58 +0100
Subject: [PATCH 3/4] Switch to new UserProfile model

---
 docs/extending/custom_account_settings.rst          | 6 +++---
 wagtail/admin/forms/account.py                      | 3 +--
 wagtail/admin/mail.py                               | 3 +--
 wagtail/admin/templatetags/wagtailuserbar.py        | 3 +--
 wagtail/admin/tests/api/test_pages.py               | 9 +++++++--
 wagtail/admin/tests/pages/test_edit_page.py         | 2 +-
 wagtail/admin/tests/pages/test_moderation.py        | 3 +--
 wagtail/admin/tests/test_account_management.py      | 2 +-
 wagtail/admin/tests/test_templatetags.py            | 3 +--
 wagtail/admin/tests/test_workflows.py               | 2 +-
 wagtail/admin/views/account.py                      | 3 +--
 wagtail/users/migrations/0008_userprofile_avatar.py | 4 ++--
 wagtail/users/tests/test_admin_views.py             | 2 +-
 13 files changed, 22 insertions(+), 23 deletions(-)

diff --git a/docs/extending/custom_account_settings.rst b/docs/extending/custom_account_settings.rst
index dae09c66869..eb72833e53c 100644
--- a/docs/extending/custom_account_settings.rst
+++ b/docs/extending/custom_account_settings.rst
@@ -8,7 +8,7 @@ Adding new panels
 -----------------
 
 Each panel on this form is a separate model form which can operate on an instance of either the user model, or the
-:class:`~wagtail.users.models.UserProfile` model.
+:class:`~wagtail.core.models.UserProfile` model.
 
 Basic example
 ~~~~~~~~~~~~~
@@ -58,7 +58,7 @@ The attributes are as follows:
 Operating on the ``UserProfile`` model
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-To add a panel that alters data on the user's :class:`~wagtail.users.models.UserProfile` instance, set ``form_object`` to ``'profile'``:
+To add a panel that alters data on the user's :class:`~wagtail.core.models.UserProfile` instance, set ``form_object`` to ``'profile'``:
 
 
   .. code-block:: python
@@ -66,7 +66,7 @@ To add a panel that alters data on the user's :class:`~wagtail.users.models.User
     # forms.py
 
     from django import forms
-    from wagtail.users.models import UserProfile
+    from wagtail.core.models import UserProfile
 
     class CustomProfileSettingsForm(forms.ModelForm):
 
diff --git a/wagtail/admin/forms/account.py b/wagtail/admin/forms/account.py
index a8e9af6b7d0..ca5b2d0abd0 100644
--- a/wagtail/admin/forms/account.py
+++ b/wagtail/admin/forms/account.py
@@ -13,8 +13,7 @@
     get_available_admin_time_zones,
 )
 from wagtail.admin.widgets import SwitchInput
-from wagtail.core.models import UserPagePermissionsProxy
-from wagtail.users.models import UserProfile
+from wagtail.core.models import UserPagePermissionsProxy, UserProfile
 
 User = get_user_model()
 
diff --git a/wagtail/admin/mail.py b/wagtail/admin/mail.py
index 9d40f2c992a..ef54d2bbdad 100644
--- a/wagtail/admin/mail.py
+++ b/wagtail/admin/mail.py
@@ -8,9 +8,8 @@
 from django.utils.translation import override
 
 from wagtail.admin.auth import users_with_page_permission
-from wagtail.core.models import GroupApprovalTask, TaskState, WorkflowState
+from wagtail.core.models import GroupApprovalTask, TaskState, UserProfile, WorkflowState
 from wagtail.core.utils import camelcase_to_underscore
-from wagtail.users.models import UserProfile
 
 logger = logging.getLogger("wagtail.admin")
 
diff --git a/wagtail/admin/templatetags/wagtailuserbar.py b/wagtail/admin/templatetags/wagtailuserbar.py
index e4aa414c599..04183680501 100644
--- a/wagtail/admin/templatetags/wagtailuserbar.py
+++ b/wagtail/admin/templatetags/wagtailuserbar.py
@@ -11,8 +11,7 @@
     RejectModerationEditPageItem,
 )
 from wagtail.core import hooks
-from wagtail.core.models import PAGE_TEMPLATE_VAR, Page, PageRevision
-from wagtail.users.models import UserProfile
+from wagtail.core.models import PAGE_TEMPLATE_VAR, Page, PageRevision, UserProfile
 
 register = template.Library()
 
diff --git a/wagtail/admin/tests/api/test_pages.py b/wagtail/admin/tests/api/test_pages.py
index 4a8299fefdf..511777b876b 100644
--- a/wagtail/admin/tests/api/test_pages.py
+++ b/wagtail/admin/tests/api/test_pages.py
@@ -9,10 +9,15 @@
 
 from wagtail.api.v2.tests.test_pages import TestPageDetail, TestPageListing
 from wagtail.core import hooks
-from wagtail.core.models import GroupPagePermission, Locale, Page, PageLogEntry
+from wagtail.core.models import (
+    GroupPagePermission,
+    Locale,
+    Page,
+    PageLogEntry,
+    UserProfile,
+)
 from wagtail.tests.demosite import models
 from wagtail.tests.testapp.models import EventIndex, EventPage, SimplePage, StreamPage
-from wagtail.users.models import UserProfile
 
 from .utils import AdminAPITestCase
 
diff --git a/wagtail/admin/tests/pages/test_edit_page.py b/wagtail/admin/tests/pages/test_edit_page.py
index 95f7d64ba26..396d6c5dbe4 100644
--- a/wagtail/admin/tests/pages/test_edit_page.py
+++ b/wagtail/admin/tests/pages/test_edit_page.py
@@ -25,6 +25,7 @@
     PageRevision,
     PageSubscription,
     Site,
+    UserProfile,
 )
 from wagtail.core.signals import page_published
 from wagtail.tests.testapp.models import (
@@ -43,7 +44,6 @@
 )
 from wagtail.tests.utils import WagtailTestUtils
 from wagtail.tests.utils.form_data import inline_formset, nested_form_data
-from wagtail.users.models import UserProfile
 
 
 class TestPageEdit(TestCase, WagtailTestUtils):
diff --git a/wagtail/admin/tests/pages/test_moderation.py b/wagtail/admin/tests/pages/test_moderation.py
index 293fa5aba41..a2a568dd31f 100644
--- a/wagtail/admin/tests/pages/test_moderation.py
+++ b/wagtail/admin/tests/pages/test_moderation.py
@@ -9,11 +9,10 @@
 from django.test import TestCase, override_settings
 from django.urls import reverse
 
-from wagtail.core.models import Page, PageRevision
+from wagtail.core.models import Page, PageRevision, UserProfile
 from wagtail.core.signals import page_published
 from wagtail.tests.testapp.models import SimplePage
 from wagtail.tests.utils import WagtailTestUtils
-from wagtail.users.models import UserProfile
 
 
 class TestApproveRejectModeration(TestCase, WagtailTestUtils):
diff --git a/wagtail/admin/tests/test_account_management.py b/wagtail/admin/tests/test_account_management.py
index a71615699fe..d2a3c08a9ae 100644
--- a/wagtail/admin/tests/test_account_management.py
+++ b/wagtail/admin/tests/test_account_management.py
@@ -17,9 +17,9 @@
     get_available_admin_time_zones,
 )
 from wagtail.admin.views.account import account, profile_tab
+from wagtail.core.models import UserProfile
 from wagtail.images.tests.utils import get_test_image_file
 from wagtail.tests.utils import WagtailTestUtils
-from wagtail.users.models import UserProfile
 
 
 class TestAuthentication(TestCase, WagtailTestUtils):
diff --git a/wagtail/admin/tests/test_templatetags.py b/wagtail/admin/tests/test_templatetags.py
index dbdc674147a..fd6e328d8ba 100644
--- a/wagtail/admin/tests/test_templatetags.py
+++ b/wagtail/admin/tests/test_templatetags.py
@@ -23,10 +23,9 @@
     timesince_simple,
 )
 from wagtail.admin.ui.components import Component
-from wagtail.core.models import Locale
+from wagtail.core.models import Locale, UserProfile
 from wagtail.images.tests.utils import get_test_image_file
 from wagtail.tests.utils import WagtailTestUtils
-from wagtail.users.models import UserProfile
 
 
 class TestAvatarTemplateTag(TestCase, WagtailTestUtils):
diff --git a/wagtail/admin/tests/test_workflows.py b/wagtail/admin/tests/test_workflows.py
index 27ce4b262cd..222b9bfb480 100644
--- a/wagtail/admin/tests/test_workflows.py
+++ b/wagtail/admin/tests/test_workflows.py
@@ -16,6 +16,7 @@
     Page,
     Task,
     TaskState,
+    UserProfile,
     Workflow,
     WorkflowPage,
     WorkflowState,
@@ -24,7 +25,6 @@
 from wagtail.core.signals import page_published
 from wagtail.tests.testapp.models import SimplePage, SimpleTask
 from wagtail.tests.utils import WagtailTestUtils
-from wagtail.users.models import UserProfile
 
 
 def delete_existing_workflows():
diff --git a/wagtail/admin/views/account.py b/wagtail/admin/views/account.py
index 56bb7ae8405..7cd3c7ea3e8 100644
--- a/wagtail/admin/views/account.py
+++ b/wagtail/admin/views/account.py
@@ -28,8 +28,7 @@
 )
 from wagtail.core import hooks
 from wagtail.core.log_actions import log
-from wagtail.core.models import UserPagePermissionsProxy
-from wagtail.users.models import UserProfile
+from wagtail.core.models import UserPagePermissionsProxy, UserProfile
 from wagtail.utils.loading import get_custom_form
 
 
diff --git a/wagtail/users/migrations/0008_userprofile_avatar.py b/wagtail/users/migrations/0008_userprofile_avatar.py
index a19bf2b66c2..93bbc5b99d9 100644
--- a/wagtail/users/migrations/0008_userprofile_avatar.py
+++ b/wagtail/users/migrations/0008_userprofile_avatar.py
@@ -1,7 +1,7 @@
 # Generated by Django 2.0 on 2018-01-17 01:03
 
 from django.db import migrations, models
-import wagtail.users.models
+import wagtail.core.models.user_profile
 
 
 class Migration(migrations.Migration):
@@ -16,7 +16,7 @@ class Migration(migrations.Migration):
             name="avatar",
             field=models.ImageField(
                 blank=True,
-                upload_to=wagtail.users.models.upload_avatar_to,
+                upload_to=wagtail.core.models.user_profile.upload_avatar_to,
                 verbose_name="profile picture",
             ),
         ),
diff --git a/wagtail/users/tests/test_admin_views.py b/wagtail/users/tests/test_admin_views.py
index b35bcb18b56..2e5c154c3c1 100644
--- a/wagtail/users/tests/test_admin_views.py
+++ b/wagtail/users/tests/test_admin_views.py
@@ -20,10 +20,10 @@
     GroupCollectionPermission,
     GroupPagePermission,
     Page,
+    UserProfile,
 )
 from wagtail.tests.utils import WagtailTestUtils
 from wagtail.users.forms import UserCreationForm, UserEditForm
-from wagtail.users.models import UserProfile
 from wagtail.users.views.groups import GroupViewSet
 from wagtail.users.views.users import get_user_creation_form, get_user_edit_form
 from wagtail.users.wagtail_hooks import get_group_viewset_cls

From ca5b912e8cbe2607d09cc327c5022ebd3d798e38 Mon Sep 17 00:00:00 2001
From: Karl Hobley <karl@torchbox.com>
Date: Fri, 1 Oct 2021 15:35:38 +0100
Subject: [PATCH 4/4] Delete wagtailusers UserProfile model

---
 .../migrations/0012_delete_userprofile.py     | 17 ++++
 wagtail/users/models.py                       | 88 -------------------
 2 files changed, 17 insertions(+), 88 deletions(-)
 create mode 100644 wagtail/users/migrations/0012_delete_userprofile.py
 delete mode 100644 wagtail/users/models.py

diff --git a/wagtail/users/migrations/0012_delete_userprofile.py b/wagtail/users/migrations/0012_delete_userprofile.py
new file mode 100644
index 00000000000..a8030441135
--- /dev/null
+++ b/wagtail/users/migrations/0012_delete_userprofile.py
@@ -0,0 +1,17 @@
+# Generated by Django 3.1.8 on 2021-10-01 14:35
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('wagtailusers', '0011_userprofile_related_name_change'),
+        ('wagtailcore', '0068_copy_userprofiles'),
+    ]
+
+    operations = [
+        migrations.DeleteModel(
+            name='UserProfile',
+        ),
+    ]
diff --git a/wagtail/users/models.py b/wagtail/users/models.py
deleted file mode 100644
index bf1fa8394dc..00000000000
--- a/wagtail/users/models.py
+++ /dev/null
@@ -1,88 +0,0 @@
-import os
-import uuid
-
-from django.conf import settings
-from django.db import models
-from django.utils.translation import get_language
-from django.utils.translation import gettext_lazy as _
-
-
-def upload_avatar_to(instance, filename):
-    filename, ext = os.path.splitext(filename)
-    return os.path.join(
-        "avatar_images",
-        "avatar_{uuid}_{filename}{ext}".format(
-            uuid=uuid.uuid4(), filename=filename, ext=ext
-        ),
-    )
-
-
-class UserProfile(models.Model):
-    user = models.OneToOneField(
-        settings.AUTH_USER_MODEL,
-        on_delete=models.CASCADE,
-        related_name="wagtail_userprofile_legacy",
-    )
-
-    submitted_notifications = models.BooleanField(
-        verbose_name=_("submitted notifications"),
-        default=True,
-        help_text=_("Receive notification when a page is submitted for moderation"),
-    )
-
-    approved_notifications = models.BooleanField(
-        verbose_name=_("approved notifications"),
-        default=True,
-        help_text=_("Receive notification when your page edit is approved"),
-    )
-
-    rejected_notifications = models.BooleanField(
-        verbose_name=_("rejected notifications"),
-        default=True,
-        help_text=_("Receive notification when your page edit is rejected"),
-    )
-
-    updated_comments_notifications = models.BooleanField(
-        verbose_name=_("updated comments notifications"),
-        default=True,
-        help_text=_(
-            "Receive notification when comments have been created, resolved, or deleted on a page that you have subscribed to receive comment notifications on"
-        ),
-    )
-
-    preferred_language = models.CharField(
-        verbose_name=_("preferred language"),
-        max_length=10,
-        help_text=_("Select language for the admin"),
-        default="",
-    )
-
-    current_time_zone = models.CharField(
-        verbose_name=_("current time zone"),
-        max_length=40,
-        help_text=_("Select your current time zone"),
-        default="",
-    )
-
-    avatar = models.ImageField(
-        verbose_name=_("profile picture"),
-        upload_to=upload_avatar_to,
-        blank=True,
-    )
-
-    @classmethod
-    def get_for_user(cls, user):
-        return cls.objects.get_or_create(user=user)[0]
-
-    def get_preferred_language(self):
-        return self.preferred_language or get_language()
-
-    def get_current_time_zone(self):
-        return self.current_time_zone or settings.TIME_ZONE
-
-    def __str__(self):
-        return self.user.get_username()
-
-    class Meta:
-        verbose_name = _("user profile")
-        verbose_name_plural = _("user profiles")
